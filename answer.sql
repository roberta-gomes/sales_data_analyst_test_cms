USE SalesDB;
GO

-- Write a query to return the customer_name, product_name, and total_amount for each sale in the last 30 days.

SELECT customer_name, product_name, SUM(total_amount) AS total_amount
FROM Customers AS A
LEFT JOIN Sales AS B
	ON A.customer_id = B.customer_id
LEFT JOIN Products AS C
	ON B.product_id = C.product_id
WHERE 1=1
AND DATEDIFF(DAY, sale_date, GETDATE()) <= 30
GROUP BY customer_name, product_name
;

-- Write a query to find the total revenue generated by each product category in the last year. 
--The output should include the product category and the total revenue for that category.

WITH CATEGORY_REVENUE AS (
SELECT category, total_amount
FROM Sales AS B
LEFT JOIN Products AS C
	ON B.product_id = C.product_id
WHERE 1=1
AND DATEDIFF(YEAR, sale_date, GETDATE()) <= 1
)

SELECT category, SUM(total_amount) AS total_revenue
FROM CATEGORY_REVENUE
GROUP BY category
;

-- Write a query to return all customers who made purchases in 2023 and are located in the "West" region.

WITH ALL_DATA AS (
SELECT a.customer_id, customer_name, sales_region, sign_up_date, c.product_id, product_name, 
category, price, sale_date, quantity, total_amount
FROM Customers AS A
LEFT JOIN Sales AS B
	ON A.customer_id = B.customer_id
LEFT JOIN Products AS C
	ON B.product_id = C.product_id
WHERE 1=1
)

SELECT distinct customer_id,customer_name
FROM ALL_DATA
WHERE 1=1
AND UPPER(sales_region) = 'WEST'
AND YEAR(sale_date) = 2023
;

-- Write a query to display the total number of sales, total quantity sold, and total revenue for each customer. 
-- The result should include the customer_name, total sales, total quantity, and total revenue.

WITH ALL_DATA AS (
SELECT a.customer_id, customer_name, sales_region, sign_up_date, c.product_id, product_name, 
category, price, sale_date, quantity, total_amount
FROM Customers AS A
LEFT JOIN Sales AS B
	ON A.customer_id = B.customer_id
LEFT JOIN Products AS C
	ON B.product_id = C.product_id
WHERE 1=1
)

SELECT customer_name, sum(price*quantity) as total_sales, sum(quantity) as total_quantity, SUM(total_amount) as total_revenue
FROM ALL_DATA
WHERE 1=1
GROUP BY customer_name

;

-- Write a query to find the top 3 customers (by total revenue) in the year 2023.

WITH ALL_DATA AS (
SELECT a.customer_id, customer_name, sales_region, sign_up_date, c.product_id, product_name, 
category, price, sale_date, quantity, total_amount
FROM Customers AS A
LEFT JOIN Sales AS B
	ON A.customer_id = B.customer_id
LEFT JOIN Products AS C
	ON B.product_id = C.product_id
WHERE 1=1
)

SELECT top 3 customer_name, SUM(total_amount) as total_revenue
FROM ALL_DATA
WHERE 1=1
AND YEAR(sale_date) = 2023
GROUP BY customer_name
ORDER BY SUM(total_amount) DESC
;

-- Write a query to rank products by their total sales quantity in 2023. 
-- The result should include the product_name, total quantity sold, and rank.

WITH ALL_DATA AS (
SELECT a.customer_id, customer_name, sales_region, sign_up_date, c.product_id, product_name, 
category, price, sale_date, quantity, total_amount, (price*quantity) as total_sales
FROM Customers AS A
LEFT JOIN Sales AS B
	ON A.customer_id = B.customer_id
LEFT JOIN Products AS C
	ON B.product_id = C.product_id
WHERE 1=1
)

SELECT 
	product_name, sum(quantity) as total_quantity,
	row_number() over(order by sum(quantity) desc) as rank
FROM ALL_DATA
WHERE 1=1
AND YEAR(sale_date) = 2023
GROUP BY product_name
ORDER BY row_number() over(order by sum(quantity) desc) 
;